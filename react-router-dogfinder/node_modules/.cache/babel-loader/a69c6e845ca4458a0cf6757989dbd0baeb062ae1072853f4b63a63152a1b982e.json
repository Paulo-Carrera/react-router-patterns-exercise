{"ast":null,"code":"var _jsxFileName = \"/home/paulo/springboard/exercises/react-router-patterns-exercise/react-router-dogfinder/src/components/DogList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DogList = () => {\n  _s();\n  const [dogs, setDogs] = useState([]);\n\n  // Fetch the data from json-server\n  useEffect(() => {\n    fetch('http://localhost:5001/dogs') // Fetching dogs data from json-server\n    .then(response => response.json()).then(data => setDogs(data)) // Set the dogs data in state\n    .catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dog List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dogs.map(dog => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dog.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/${dog.src}.jpg`,\n          alt: dog.name,\n          width: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", dog.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: dog.facts.map((fact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: fact\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, dog.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(DogList, \"pSBGSKa0uqsDjyjGPBMjPOVWgI8=\");\n_c = DogList;\nexport default DogList;\nvar _c;\n$RefreshReg$(_c, \"DogList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DogList","_s","dogs","setDogs","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dog","name","src","alt","width","age","facts","fact","index","_c","$RefreshReg$"],"sources":["/home/paulo/springboard/exercises/react-router-patterns-exercise/react-router-dogfinder/src/components/DogList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst DogList = () => {\n  const [dogs, setDogs] = useState([]);\n\n  // Fetch the data from json-server\n  useEffect(() => {\n    fetch('http://localhost:5001/dogs')  // Fetching dogs data from json-server\n      .then(response => response.json())\n      .then(data => setDogs(data))  // Set the dogs data in state\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  return (\n    <div>\n      <h1>Dog List</h1>\n      <ul>\n        {dogs.map(dog => (\n          <li key={dog.name}>\n            <h2>{dog.name}</h2>\n            <img src={`/${dog.src}.jpg`} alt={dog.name} width=\"150\" />\n            <p>Age: {dog.age}</p>\n            <ul>\n              {dog.facts.map((fact, index) => (\n                <li key={index}>{fact}</li>\n              ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DogList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,4BAA4B,CAAC,CAAE;IAAA,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,OAAO,CAACK,IAAI,CAAC,CAAC,CAAE;IAAA,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjB,OAAA;MAAAa,QAAA,EACGV,IAAI,CAACe,GAAG,CAACC,GAAG,iBACXnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKM,GAAG,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBjB,OAAA;UAAKqB,GAAG,EAAE,IAAIF,GAAG,CAACE,GAAG,MAAO;UAACC,GAAG,EAAEH,GAAG,CAACC,IAAK;UAACG,KAAK,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1DjB,OAAA;UAAAa,QAAA,GAAG,OAAK,EAACM,GAAG,CAACK,GAAG;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBjB,OAAA;UAAAa,QAAA,EACGM,GAAG,CAACM,KAAK,CAACP,GAAG,CAAC,CAACQ,IAAI,EAAEC,KAAK,kBACzB3B,OAAA;YAAAa,QAAA,EAAiBa;UAAI,GAAZC,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAREE,GAAG,CAACC,IAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}